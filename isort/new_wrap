    formatter = _wrap_modes.get(config["multi_line_output"].name.upper(), grid)
    dynamic_indent = " " * (len(import_start) + 1)
    indent = config["indent"]
    line_length = config["wrap_length"] or config["line_length"]
    import_statement = formatter(
        statement=import_start,
        imports=copy.copy(from_imports),
        white_space=dynamic_indent,
        indent=indent,
        line_length=line_length,
        comments=comments,
        line_separator=line_separator,
        comment_prefix=config["comment_prefix"],
        include_trailing_comma=config["include_trailing_comma"],
        remove_comments=config["ignore_comments"],
    )
    if config["balanced_wrapping"]:
        lines = import_statement.split(line_separator)
        line_count = len(lines)
        if len(lines) > 1:
            minimum_length = min(len(line) for line in lines[:-1])
        else:
            minimum_length = 0
        new_import_statement = import_statement
        while len(lines[-1]) < minimum_length and len(lines) == line_count and line_length > 10:
            import_statement = new_import_statement
            line_length -= 1
            new_import_statement = formatter(
                statement=import_start,
                imports=copy.copy(from_imports),
                white_space=dynamic_indent,
                indent=indent,
                line_length=line_length,
                comments=comments,
                line_separator=line_separator,
                comment_prefix=config["comment_prefix"],
                include_trailing_comma=config["include_trailing_comma"],
                remove_comments=config["ignore_comments"],
            )
            lines = new_import_statement.split(line_separator)
    if import_statement.count(line_separator) == 0:
        return wrap_line(import_statement, line_separator, config)
    return import_statement
